name: 'My Composite Action'
description: 'Combines multiple steps'
runs:
  using: "composite"
  steps:
    - name: 检查rootfs.tar.gz是否存在
      shell: bash
      run: |
        cd $HOME_PATH
        find $FIRMWARE_PATH -type f -name "*.tar.gz" -size -1M -delete
        if [[ ! "${TARGET_PROFILE}" == "aarch_64" ]]; then
          echo -e "\033[31m 非aarch64指定打包系列 \033[0m"
          echo "PACKAGING_FIRMWARE=false" >> ${GITHUB_ENV}
        elif [[ -n "$(find $FIRMWARE_PATH -maxdepth 1 -name '*rootfs.tar.gz' -print -quit)" ]]; then
          mkdir -p "${HOME_PATH}/targz"
          cp -Rf ${FIRMWARE_PATH}/*rootfs.tar.gz ${HOME_PATH}/targz/${SOURCE}-armvirt-64-default-rootfs.tar.gz
          echo "PACKAGING_FIRMWARE=true" >> ${GITHUB_ENV}
        else
          echo -e "\033[31m 没发现armvirt-64-default-rootfs.tar.gz包存在 \033[0m"
          echo "PACKAGING_FIRMWARE=false" >> ${GITHUB_ENV}
        fi
        
    - name: 将rootfs.tar.gz发布releases的targz
      if: env.PACKAGING_FIRMWARE == 'true'
      uses: ncipollo/release-action@v1
      with:
        name: rootfs.tar.gz
        tag: targz
        token: ${{ env.REPO_TOKEN }}
        artifacts: openwrt/targz/*rootfs.tar.gz
        allowUpdates: true
        replacesArtifacts: true
        body: aarch64系列打包使用的rootfs.tar.gz包

    - name: 打包aarch64系列固件
      id: dabao
      if: env.PACKAGING_FIRMWARE == 'true'
      uses: ophub/amlogic-s9xxx-openwrt@main
      with:
        openwrt_path: openwrt/targz/*rootfs.tar.gz
        openwrt_board: ${{ env.amlogic_model }}
        openwrt_kernel: ${{ env.amlogic_kernel }}
        auto_kernel: ${{ env.auto_kernel }}
        kernel_repo: ${{ env.kernel_repo }}
        kernel_usage: ${{ env.kernel_usage }}
        openwrt_size: ${{ env.openwrt_size }}
        builder_name: ${{ env.builder_name }}

    - name: 打包信息
      if: steps.dabao.outcome == 'success'
      shell: bash
      run: |
        cd $HOME_PATH
        echo "DABAO_MESSAGE=、打包" >> ${GITHUB_ENV}

    - name: 打包后的固件放回原位
      if: steps.dabao.outcome == 'success' && env.PACKAGING_FIRMWARE == 'true'
      shell: bash
      run: |
        cd $HOME_PATH
        if [[ -d "${PACKAGED_OUTPUTPATH}" ]]; then
          cp -Rf $FIRMWARE_PATH/* $PACKAGED_OUTPUTPATH
        fi
        echo "FIRMWARE_PATH=$PACKAGED_OUTPUTPATH" >> ${GITHUB_ENV}
        echo "TARGET_PROFILE_IMG=aarch64-img" >> ${GITHUB_ENV}


    - name: 上传固件在 github Artifacts
      id: shang
      if: env.UPLOAD_FIRMWARE == 'true'
      uses: actions/upload-artifact@main
      with:
        name: ${{ env.SHANGCHUAN_MINGCHEN }}-firmware-${{ env.Firmware_Date }}
        path: ${{ env.FIRMWARE_PATH }}

    - name: 上传信息
      if: steps.shang.outcome == 'success' && env.UPLOAD_FIRMWARE == 'true'
      shell: bash
      run: |
        cd $HOME_PATH
        echo "SHANG_MESSAGE=、上传Artifacts" >> ${GITHUB_ENV}

    - name: 发布固件到 Github Releases
      uses: ncipollo/release-action@v1
      with:
        name: ${{ env.amlogic_model }}
        tag: a${{ env.date }}
        token: ${{ env.REPO_TOKEN }}
        allowUpdates: true
        replacesArtifacts: true
        artifacts: "${{ env.FIRMWARE_PATH }}/*"
        body: |
          发布日期：${{ env.date_tg }}
          固件源码：${{ env.SOURCE }}
          内核仓库：${{ env.kernel_usage }}
          写入EMMC：Login to OpenWrt → System → Amlogic Service → Install OpenWrt
branding:
  icon: "terminal"
  color: "gray-dark"
