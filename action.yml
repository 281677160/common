name: "Make OpenWrt"
author: "https://github.com/ophub/amlogic-s9xxx-openwrt"
description: "Support Amlogic, Rockchip and Allwinner boxes."
inputs:
  ccache:
    description: "Select script."
    required: true
    default: "true"
  openwrt_path:
    description: "Select armvirt64 file path."
    required: false
    default: "openwrt/bin/targets/*/*/*rootfs.tar.gz"
  openwrt_board:
    description: "Select device board."
    required: false
    default: "all"
  kernel_repo:
    description: "Select kernel repository."
    required: false
    default: "ophub/kernel"
  kernel_usage:
    description: "Set the tags of the stable kernel."
    required: false
    default: "stable"
  openwrt_kernel:
    description: "Select kernel version."
    required: false
    default: "6.1.y_6.12.y"
  auto_kernel:
    description: "Auto use the latest kernel."
    required: false
    default: "true"
  openwrt_size:
    description: "Set the rootfs size(Unit: MiB)."
    required: false
    default: ""
  builder_name:
    description: "Set OpenWrt builder signature."
    required: false
    default: ""

runs:
  using: "composite"
  steps:
    - name: Run a script
      shell: bash
      run: |
        cd ${HOME_PATH}
        $DIY_P1_SH
        ./scripts/feeds update -a
        [ -d "$BUILD_PATCHES" ] && find "$BUILD_PATCHES" -type f -name '*.patch' -print0 | sort -z | xargs -I % -t -0 -n 1 sh -c "cat '%'  | patch -d './' -p1 --forward --no-backup-if-mismatch"
        [ -d "$BUILD_DIY" ] && cp -Rf $BUILD_DIY/* $HOME_PATH
        [ -d "$BUILD_FILES" ] && cp -Rf $BUILD_FILES $HOME_PATH
        rm -rf $HOME_PATH/files/README
        mv $CONFIG_FILE $HOME_PATH/.config
        ./scripts/feeds install -a
        ./scripts/feeds install -a
        $DIY_P2_SH
        make defconfig
        TARGET_BOARD="$(awk -F '[="]+' '/TARGET_BOARD/{print $2}' .config)"
        TARGET_SUBTARGET="$(awk -F '[="]+' '/TARGET_SUBTARGET/{print $2}' .config)"
        TARGET_PROFILE_DG="$(awk -F '[="]+' '/TARGET_PROFILE/{print $2}' .config)"
        if [[ -n "$(grep -Eo 'CONFIG_TARGET.*x86.*64.*=y' .config)" ]]; then
          TARGET_PROFILE="x86-64"
        elif [[ -n "$(grep -Eo 'CONFIG_TARGET.*x86.*=y' .config)" ]]; then
          TARGET_PROFILE="x86-32"
        elif [[ -n "$(grep -Eo 'CONFIG_TARGET.*DEVICE.*phicomm.*n1=y' .config)" ]]; then
          TARGET_PROFILE="phicomm_n1"
        elif [[ -n "$(grep -Eo 'CONFIG_aarch64=y' .config)" ]]; then
          TARGET_PROFILE="aarch_64"
        elif [[ -n "$(grep -Eo 'CONFIG_TARGET.*DEVICE.*=y' .config)" ]]; then
          TARGET_PROFILE="$(grep -Eo "CONFIG_TARGET.*DEVICE.*=y" .config | sed -r 's/.*DEVICE_(.*)=y/\1/')"
        else
          TARGET_PROFILE="${TARGET_PROFILE_DG}"
        fi
        echo "DEVICE_NAME=${TARGET_PROFILE}" >> ${GITHUB_ENV}
        echo "BIN_TARGETS=${HOME_PATH}/bin_firmware" >> ${GITHUB_ENV}
        echo "FIRMWARE=${HOME_PATH}/bin/targets/${TARGET_BOARD}/${TARGET_SUBTARGET}" >> ${GITHUB_ENV}

        echo "ccache=true" >> $GITHUB_OUTPUT
        echo "mixkey=$DEVICE_NAME" >> $GITHUB_OUTPUT
        echo "prefix=${{ github.workspace }}/openwrt" >> $GITHUB_OUTPUT

    - name: Use another Action
      uses: stupidloud/cachewrtbuild@main
branding:
  icon: "terminal"
  color: "gray-dark"
