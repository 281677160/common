name: 'My Composite Action'
description: 'Combines multiple steps'
runs:
  using: "composite"
  steps:
    - name: 下载源码后进行源码微调和增加插件源
      shell: bash
      run: |
        cd $HOME_PATH
        source $COMMON_SH && Diy_checkout

    - name: 更新feeds
      shell: bash
      run: |
        cd $HOME_PATH
        ./scripts/feeds update -a > /dev/null 2>&1

    - name: 更新feeds后再次修改补充
      shell: bash
      run: |
        cd $HOME_PATH
        source $COMMON_SH && Diy_complement
        source $COMMON_SH && Diy_${SOURCE_CODE}

    - name: 加载自定义设置diy-part.sh
      shell: bash
      run: |
        cd $HOME_PATH
        source ${BUILD_PARTSH}

    - name: 重新更新feeds
      shell: bash
      run: |
        cd $HOME_PATH
        ./scripts/feeds update -a > /dev/null 2>&1

    - name: 安装feeds
      shell: bash
      run: |
        cd $HOME_PATH
        ./scripts/feeds update -a > /dev/null 2>&1
        ./scripts/feeds update -a
        
        # 使用自定义配置文件
        [[ -f "$MYCONFIG_FILE" ]] && mv $MYCONFIG_FILE .config

    - name: SSH远程连接（make menuconfig）
      if: env.SSH_ACTION == 'true'
      uses: danshui-git/debugger-action@main

    - name: 生成配置文件和提取机型
      shell: bash
      run: |
        cd $HOME_PATH
        make defconfig
        source $COMMON_SH && Make_defconfig

    - name: 机型为aarch_64的时,改变是远程更新为打包设置
      shell: bash
      run: |
        cd $HOME_PATH
        if [[ "${TARGET_BOARD}" =~ (armvirt|armsr) ]]; then
          echo "PACKAGING_FIRMWARE=${UPDATE_FIRMWARE_ONLINE}" >> ${GITHUB_ENV}
          echo "UPDATE_FIRMWARE_ONLINE=false" >> ${GITHUB_ENV}
        fi

    - name: 生成配置文件的小修改
      shell: bash
      run: |
        cd $HOME_PATH
        source $COMMON_SH && Diy_management
        
    - name: 配置自定义里面的各种开关
      shell: bash
      run: |
        cd $HOME_PATH
        source $COMMON_SH && Diy_menu5
  

    - name: 判断插件有否冲突减少编译错误
      shell: bash
      run: |
        cd $HOME_PATH
        source $COMMON_SH && Diy_prevent
        
        echo "Firmware_Date=$(date +%Y-%m%d-%H%M)" >> ${GITHUB_ENV}
        echo "SendMessage=true" >> ${GITHUB_ENV}

    - name: 上传配置文件在 Github Artifacts
      if: env.SHANG_CHUAN == 'true'
      uses: actions/upload-artifact@main
      with:
        name: .config_${{ env.SOURCE }}_${{ env.LUCI_EDITION }}_${{ env.TARGET_PROFILE }}_${{ env.Firmware_Date }}
        path: openwrt/build_logo/config.txt
branding:
  icon: "terminal"
  color: "gray-dark"
